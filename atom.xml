<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>EagleLee</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.eaglelee.cn/"/>
  <updated>2020-06-07T14:41:14.103Z</updated>
  <id>https://blog.eaglelee.cn/</id>
  
  <author>
    <name>Chengxin Li</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python3操作SQLite3</title>
    <link href="https://blog.eaglelee.cn/2020/06/07/Python3%E6%93%8D%E4%BD%9CSQLite3/"/>
    <id>https://blog.eaglelee.cn/2020/06/07/Python3%E6%93%8D%E4%BD%9CSQLite3/</id>
    <published>2020-06-07T14:43:24.268Z</published>
    <updated>2020-06-07T14:41:14.103Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python3操作SQLite3"><a href="#Python3操作SQLite3" class="headerlink" title="Python3操作SQLite3"></a><a href="https://www.python.org" target="_blank" rel="noopener">Python3</a>操作<a href="https://sqlite.org/index.html" target="_blank" rel="noopener">SQLite3</a></h1><a id="more"></a><h2 id="一、-连接-创建数据库"><a href="#一、-连接-创建数据库" class="headerlink" title="一、 连接/创建数据库"></a>一、 连接/创建数据库</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># connect_sqlite3.py</span></span><br><span class="line">import sqlite3</span><br><span class="line"></span><br><span class="line">DB_Name = 'test.db'</span><br><span class="line"><span class="comment"># 连接数据库，如果不存在则会在当前目录创建test.db文件</span></span><br><span class="line">conn = sqlite3.connect(DB_Name)</span><br><span class="line">print(f'连接数据库&#123;DB_Name&#125;成功')</span><br></pre></td></tr></table></figure><p>程序执行结果：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">连接数据库<span class="keyword">test</span>.<span class="keyword">db</span>成功</span><br></pre></td></tr></table></figure><hr><h2 id="二、创建数据库表"><a href="#二、创建数据库表" class="headerlink" title="二、创建数据库表"></a>二、创建数据库表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># create_table_sqlite3.py</span></span><br><span class="line">import sqlite3</span><br><span class="line"> </span><br><span class="line">DB_Name = 'test.db'</span><br><span class="line">Table_Name = 'STUDENT'</span><br><span class="line"><span class="comment"># 连接数据库，如果不存在则会在当前目录创建</span></span><br><span class="line">conn = sqlite3.connect(DB_Name)</span><br><span class="line">try:</span><br><span class="line">    <span class="comment"># 创建游标</span></span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line">    <span class="comment"># 创建STUDENT表的SQL语句，默认编码为UTF-8</span></span><br><span class="line">    SQL = '''</span><br><span class="line">      <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> %s (</span><br><span class="line">        SNO <span class="built_in">CHAR</span>(<span class="number">10</span>),</span><br><span class="line">        SNAME <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">        PRIMARY <span class="keyword">KEY</span>(SNO)</span><br><span class="line">    )</span><br><span class="line">        <span class="string">''' % (Table_Name)</span></span><br><span class="line"><span class="string">    # 创建数据库表</span></span><br><span class="line"><span class="string">    cursor.execute(SQL)</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">    # 提交到数据库</span></span><br><span class="line"><span class="string">    conn.commit()</span></span><br><span class="line"><span class="string">    print('</span>创建数据库表%s成功<span class="string">' % (Table_Name))</span></span><br><span class="line"><span class="string">except Exception as e:</span></span><br><span class="line"><span class="string">    print(e)</span></span><br><span class="line"><span class="string">    # 回滚</span></span><br><span class="line"><span class="string">    conn.rollback()</span></span><br><span class="line"><span class="string">    print('</span>创建数据库表%s失败<span class="string">' % Table_Name)</span></span><br><span class="line"><span class="string">finally:</span></span><br><span class="line"><span class="string">    # 关闭数据库</span></span><br><span class="line"><span class="string">    conn.close()</span></span><br></pre></td></tr></table></figure><p>程序执行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">创建数据库表STUDENT成功</span><br></pre></td></tr></table></figure><hr><h2 id="三、增删改查操作"><a href="#三、增删改查操作" class="headerlink" title="三、增删改查操作"></a>三、增删改查操作</h2><h3 id="1、插入数据"><a href="#1、插入数据" class="headerlink" title="1、插入数据"></a>1、插入数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># insertData_sqlite3.py</span></span><br><span class="line">import sqlite3</span><br><span class="line"></span><br><span class="line">DB_Name = 'test.db'</span><br><span class="line"><span class="comment"># 连接数据库，如果不存在则会在当前目录创建</span></span><br><span class="line">conn = sqlite3.connect(DB_Name)</span><br><span class="line">try:</span><br><span class="line">    <span class="comment"># 创建游标</span></span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line">    <span class="comment"># 向STUDENT表插入数据的SQL语句</span></span><br><span class="line">    SQL = '''</span><br><span class="line">          <span class="keyword">INSERT</span> <span class="keyword">INTO</span> STUDENT <span class="keyword">VALUES</span>(<span class="string">'2016081111'</span>,<span class="string">'张三'</span>),(<span class="string">'2016081112'</span>,<span class="string">'李四'</span>),(<span class="string">'2016081113'</span>,<span class="string">'王五'</span>);</span><br><span class="line">          '''</span><br><span class="line">    <span class="comment"># 插入数据</span></span><br><span class="line">    cursor.execute(<span class="keyword">SQL</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 提交到数据库</span></span><br><span class="line">    conn.commit()</span><br><span class="line">    print(<span class="string">'插入数据到表STUDENT成功'</span>)</span><br><span class="line"><span class="keyword">except</span> <span class="keyword">Exception</span> <span class="keyword">as</span> e:</span><br><span class="line">    print(e)</span><br><span class="line">    <span class="comment"># 回滚</span></span><br><span class="line">    conn.rollback()</span><br><span class="line">    print(<span class="string">'插入数据到表STUDENT失败'</span>)</span><br><span class="line">finally:</span><br><span class="line">    <span class="comment"># 关闭数据库</span></span><br><span class="line">    conn.close()</span><br></pre></td></tr></table></figure><p>程序执行结果为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">插入数据到表STUDENT成功</span><br></pre></td></tr></table></figure><h3 id="2、查询数据"><a href="#2、查询数据" class="headerlink" title="2、查询数据"></a>2、查询数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># selectData_sqlite3.py</span></span><br><span class="line">import sqlite3</span><br><span class="line"></span><br><span class="line">DB_Name = 'test.db'</span><br><span class="line"><span class="comment"># 连接数据库，如果不存在则会在当前目录创建</span></span><br><span class="line">conn = sqlite3.connect(DB_Name)</span><br><span class="line">try:</span><br><span class="line">    <span class="comment"># 创建游标</span></span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line">    <span class="comment"># 查询数据的SQL语句</span></span><br><span class="line">    SQL = '''</span><br><span class="line">          <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> STUDENT;</span><br><span class="line">          '''</span><br><span class="line">    <span class="comment"># 查询数据</span></span><br><span class="line">    cursor.execute(<span class="keyword">SQL</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取一条数据</span></span><br><span class="line">    one = cursor.fetchone()</span><br><span class="line">    print(one)</span><br><span class="line">     </span><br><span class="line">    <span class="comment"># 获取所有数据</span></span><br><span class="line">    <span class="keyword">for</span> <span class="keyword">row</span> <span class="keyword">in</span> cursor.fetchall():</span><br><span class="line">        print(<span class="keyword">row</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> <span class="keyword">Exception</span> <span class="keyword">as</span> e:</span><br><span class="line">    print(e)</span><br><span class="line">    print(<span class="string">'查询数据失败'</span>)</span><br><span class="line">finally:</span><br><span class="line">    <span class="comment"># 关闭数据库</span></span><br><span class="line">    conn.close()</span><br></pre></td></tr></table></figure><p>程序执行结果为：</p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="symbol">'2016081111</span>', <span class="symbol">'张三</span>')</span><br><span class="line">(<span class="symbol">'2016081112</span>', <span class="symbol">'李四</span>')</span><br><span class="line">(<span class="symbol">'2016081113</span>', <span class="symbol">'王五</span>')</span><br></pre></td></tr></table></figure><h3 id="3、修改数据"><a href="#3、修改数据" class="headerlink" title="3、修改数据"></a>3、修改数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># updateData_sqlite3.py</span></span><br><span class="line">import sqlite3</span><br><span class="line"></span><br><span class="line">DB_Name = 'test.db'</span><br><span class="line"><span class="comment"># 连接数据库，如果不存在则会在当前目录创建</span></span><br><span class="line">conn = sqlite3.connect(DB_Name)</span><br><span class="line">try:</span><br><span class="line">    <span class="comment"># 创建游标</span></span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line">    <span class="comment"># 查询数据的SQL语句</span></span><br><span class="line">    SELECT_SQL = '''</span><br><span class="line">          <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> STUDENT;</span><br><span class="line">          '''</span><br><span class="line">    <span class="comment"># 修改数据的SQL语句</span></span><br><span class="line">    UPDATE_SQL = '''</span><br><span class="line">             <span class="keyword">UPDATE</span> STUDENT <span class="keyword">SET</span> SNAME=<span class="string">'%s'</span> <span class="keyword">WHERE</span> SNO=<span class="string">'%s'</span></span><br><span class="line">             <span class="string">''' % ('</span>李华<span class="string">', '</span><span class="number">2016081111</span><span class="string">')</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    # 修改前</span></span><br><span class="line"><span class="string">    print('</span>修改前<span class="string">')</span></span><br><span class="line"><span class="string">    cursor.execute(SELECT_SQL)</span></span><br><span class="line"><span class="string">    for row in cursor.fetchall():</span></span><br><span class="line"><span class="string">        print(row)</span></span><br><span class="line"><span class="string">    # 修改数据</span></span><br><span class="line"><span class="string">    cursor.execute(UPDATE_SQL)</span></span><br><span class="line"><span class="string">    # 提交到数据库</span></span><br><span class="line"><span class="string">    conn.commit()</span></span><br><span class="line"><span class="string">     </span></span><br><span class="line"><span class="string">    # 修改后</span></span><br><span class="line"><span class="string">    print('</span>修改后<span class="string">')</span></span><br><span class="line"><span class="string">    cursor.execute(SELECT_SQL)</span></span><br><span class="line"><span class="string">    for row in cursor.fetchall():</span></span><br><span class="line"><span class="string">        print(row)</span></span><br><span class="line"><span class="string">except Exception as e:</span></span><br><span class="line"><span class="string">    print(e)</span></span><br><span class="line"><span class="string">    print('</span>修改数据失败<span class="string">')</span></span><br><span class="line"><span class="string">finally:</span></span><br><span class="line"><span class="string">    # 关闭数据库</span></span><br><span class="line"><span class="string">    conn.close()</span></span><br></pre></td></tr></table></figure><p>程序执行结果：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">修改前</span><br><span class="line">('<span class="number">2016081111</span>', '张三')</span><br><span class="line">('<span class="number">2016081112</span>', '李四')</span><br><span class="line">('<span class="number">2016081113</span>', '王五')</span><br><span class="line">修改后</span><br><span class="line">('<span class="number">2016081111</span>', '李华')</span><br><span class="line">('<span class="number">2016081112</span>', '李四')</span><br><span class="line">('<span class="number">2016081113</span>', '王五')</span><br></pre></td></tr></table></figure><h3 id="4、删除数据"><a href="#4、删除数据" class="headerlink" title="4、删除数据"></a>4、删除数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># deleteData_sqlite3.py</span></span><br><span class="line">import sqlite3</span><br><span class="line"></span><br><span class="line">DB_Name = 'test.db'</span><br><span class="line"><span class="comment"># 连接数据库，如果不存在则会在当前目录创建</span></span><br><span class="line">conn = sqlite3.connect(DB_Name)</span><br><span class="line">try:</span><br><span class="line">    <span class="comment"># 创建游标</span></span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line">    <span class="comment"># 查询数据的SQL语句</span></span><br><span class="line">    SELECT_SQL = '''</span><br><span class="line">          <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> STUDENT;</span><br><span class="line">          '''</span><br><span class="line">    <span class="comment"># 删除数据的SQL语句</span></span><br><span class="line">    DELETE_SQL = '''</span><br><span class="line">             <span class="keyword">DELETE</span> <span class="keyword">FROM</span> STUDENT <span class="keyword">WHERE</span> SNO=<span class="string">'%s'</span></span><br><span class="line">             <span class="string">''' % ('</span><span class="number">2016081111</span><span class="string">')</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    # 删除前</span></span><br><span class="line"><span class="string">    print('</span>删除前<span class="string">')</span></span><br><span class="line"><span class="string">    cursor.execute(SELECT_SQL)</span></span><br><span class="line"><span class="string">    for row in cursor.fetchall():</span></span><br><span class="line"><span class="string">        print(row)</span></span><br><span class="line"><span class="string">    # 删除数据</span></span><br><span class="line"><span class="string">    cursor.execute(DELETE_SQL)</span></span><br><span class="line"><span class="string">    # 提交到数据库</span></span><br><span class="line"><span class="string">    conn.commit()</span></span><br><span class="line"><span class="string">     </span></span><br><span class="line"><span class="string">    # 删除后</span></span><br><span class="line"><span class="string">    print('</span>删除后<span class="string">')</span></span><br><span class="line"><span class="string">    cursor.execute(SELECT_SQL)</span></span><br><span class="line"><span class="string">    for row in cursor.fetchall():</span></span><br><span class="line"><span class="string">        print(row)</span></span><br><span class="line"><span class="string">except Exception as e:</span></span><br><span class="line"><span class="string">    print(e)</span></span><br><span class="line"><span class="string">    print('</span>删除数据失败<span class="string">')</span></span><br><span class="line"><span class="string">finally:</span></span><br><span class="line"><span class="string">    # 关闭数据库</span></span><br><span class="line"><span class="string">    conn.close()</span></span><br></pre></td></tr></table></figure><p>程序执行结果：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">删除前</span><br><span class="line">('<span class="number">2016081111</span>', '李华')</span><br><span class="line">('<span class="number">2016081112</span>', '李四')</span><br><span class="line">('<span class="number">2016081113</span>', '王五')</span><br><span class="line">删除后</span><br><span class="line">('<span class="number">2016081112</span>', '李四')</span><br><span class="line">('<span class="number">2016081113</span>', '王五')</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Python3操作SQLite3&quot;&gt;&lt;a href=&quot;#Python3操作SQLite3&quot; class=&quot;headerlink&quot; title=&quot;Python3操作SQLite3&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.python.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Python3&lt;/a&gt;操作&lt;a href=&quot;https://sqlite.org/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SQLite3&lt;/a&gt;&lt;/h1&gt;
    
    </summary>
    
    
    
      <category term="python3" scheme="https://blog.eaglelee.cn/tags/python3/"/>
    
      <category term="sqlite3" scheme="https://blog.eaglelee.cn/tags/sqlite3/"/>
    
  </entry>
  
  <entry>
    <title>Git Note</title>
    <link href="https://blog.eaglelee.cn/2020/02/19/Git%20Notes/"/>
    <id>https://blog.eaglelee.cn/2020/02/19/Git%20Notes/</id>
    <published>2020-02-19T08:28:33.280Z</published>
    <updated>2020-02-27T09:46:04.467Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Git-Version-Ccontrol-System"><a href="#Git-Version-Ccontrol-System" class="headerlink" title="Git(Version Ccontrol System)"></a><center>Git(Version Ccontrol System)</center><a id="more"></a></h1><p><a href http: git-scm.com docs"" title="官方在线阅读">Git 完整命令在线手册</a></p><p><a href https: www.runoob.com manual github-git-cheat-sheet.pdf"" title="pdf离线阅读">Git 命令PDF离线手册</a></p><h2 id="一、Git的安装及版本查看命令"><a href="#一、Git的安装及版本查看命令" class="headerlink" title="一、Git的安装及版本查看命令"></a>一、Git的安装及版本查看命令</h2><h3 id="1、Git的安装"><a href="#1、Git的安装" class="headerlink" title="1、Git的安装"></a>1、Git的安装</h3><p>(1)、从Git官网上<a href https: git-scm.com downloads"" title="点击跳转到Git官网">下载</a>自己系统对应的版本；<br>(2)、安装好后在终端里输入 <code>git --version</code>来查看Git版本，若能正确显示版本号，则说明安装成功；</p><h2 id="二、Git的配置命令"><a href="#二、Git的配置命令" class="headerlink" title="二、Git的配置命令"></a>二、Git的配置命令</h2><h3 id="1、设置-修改全局用户名和邮箱"><a href="#1、设置-修改全局用户名和邮箱" class="headerlink" title="1、设置/修改全局用户名和邮箱"></a>1、设置/修改全局用户名和邮箱</h3><blockquote><p>&emsp;用户名和邮箱地址是本地git客户端的一个变量，每次commit都会用用户名和邮箱纪录。github的contributions统计就是按邮箱来统计的。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"name"</span>    //<span class="string">"name"</span>为自己的用户名</span><br><span class="line">git config --global user.email <span class="string">"email"</span>    //<span class="string">"email"</span>为自己的邮箱</span><br></pre></td></tr></table></figure><h3 id="2、查看配置信息"><a href="#2、查看配置信息" class="headerlink" title="2、查看配置信息"></a>2、查看配置信息</h3><blockquote><p>config 配置有system级别，global(用户级别)和local(当前仓库)三个，设置先从system &gt; global &gt; local，底层配置会覆盖顶层配置，分别使用–system/global/local 可以定位到配置文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --system --list    //查看系统配置信息</span><br><span class="line">git config --global --list    //查看当前用户（global）配置信息</span><br><span class="line">git config --<span class="built_in">local</span> --list     //查看当前仓库的配置信息</span><br></pre></td></tr></table></figure><h3 id="3、查看自己的用户名和邮箱"><a href="#3、查看自己的用户名和邮箱" class="headerlink" title="3、查看自己的用户名和邮箱"></a>3、查看自己的用户名和邮箱</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name    //查看自己已配置的用户名</span><br><span class="line">git config user.email    //查看自己已配置的邮箱</span><br></pre></td></tr></table></figure><h2 id="三、Git的基本操作命令"><a href="#三、Git的基本操作命令" class="headerlink" title="三、Git的基本操作命令"></a>三、Git的基本操作命令</h2><h3 id="Git命令大全"><a href="#Git命令大全" class="headerlink" title="Git命令大全"></a><strong>Git命令大全</strong></h3><p><img src="/2020/02/19/Git%20Notes/git%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8.png" alt="Git命令大全"></p><h3 id="1、Git初始化本地仓库"><a href="#1、Git初始化本地仓库" class="headerlink" title="1、Git初始化本地仓库"></a>1、Git初始化本地仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init    //创建一个空的Git仓库或重新初始化一个现有仓库</span><br></pre></td></tr></table></figure><h3 id="2、添加文件"><a href="#2、添加文件" class="headerlink" title="2、添加文件"></a>2、添加文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git add &lt;file&gt;    //把当前文件放入暂存区,<span class="string">"&lt;file&gt;"</span>为文件名或带路径的文件名</span><br><span class="line">git reset -- &lt;file&gt;    //用来撤销最后一次放入暂存区的文件</span><br><span class="line">git reset    //撤销所有暂存区文件。</span><br><span class="line">git checkout -- &lt;file&gt;    //把文件从暂存区复制到工作目录，用来丢弃本地修改。</span><br><span class="line">git rm --cached    //删除暂存区上的文件</span><br></pre></td></tr></table></figure><h3 id="3、查看状态"><a href="#3、查看状态" class="headerlink" title="3、查看状态"></a>3、查看状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status    //查看本地仓库中文件的状态</span><br></pre></td></tr></table></figure><h3 id="4、提交"><a href="#4、提交" class="headerlink" title="4、提交"></a>4、提交</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git commit    //给暂存区域生成快照并提交</span><br><span class="line">git commit -m <span class="string">"modified"</span>    //<span class="string">"modified"</span>处为此次修改提交的注释</span><br></pre></td></tr></table></figure><h3 id="5、推送到远程仓库"><a href="#5、推送到远程仓库" class="headerlink" title="5、推送到远程仓库"></a>5、推送到远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push    //推送本地仓库中的所有文件到远程仓库</span><br></pre></td></tr></table></figure><h3 id="6、从远程仓库拉取数据"><a href="#6、从远程仓库拉取数据" class="headerlink" title="6、从远程仓库拉取数据"></a>6、从远程仓库拉取数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull    //从远程仓库拉取数据</span><br></pre></td></tr></table></figure><h3 id="7、从远程仓库拷贝数据"><a href="#7、从远程仓库拷贝数据" class="headerlink" title="7、从远程仓库拷贝数据"></a>7、从远程仓库拷贝数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/***/xxx.git  //从远程仓库xxx上拷贝整个项目到本地</span><br></pre></td></tr></table></figure><h3 id="8、分支的使用"><a href="#8、分支的使用" class="headerlink" title="8、分支的使用"></a>8、分支的使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch br1    //创建一个分支名为<span class="string">"br1"</span></span><br><span class="line">git checkout br2    //切换到分支<span class="string">"br2"</span></span><br></pre></td></tr></table></figure><blockquote><p>注：在分支中的所有改变不会使主线master跟着改变</p></blockquote><h3 id="9、合并分支"><a href="#9、合并分支" class="headerlink" title="9、合并分支"></a>9、合并分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge br1    //将分支<span class="string">"br1"</span>合并到主线master里去</span><br></pre></td></tr></table></figure><h3 id="10、忽略某些文件的status"><a href="#10、忽略某些文件的status" class="headerlink" title="10、忽略某些文件的status"></a>10、忽略某些文件的status</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">①.在仓库里创建一个文件，命名为<span class="string">".gitignore"</span>；</span><br><span class="line">②.将需要忽略的文件或文件夹(忽略文件夹的格式为<span class="string">"/***"</span>)的名称名写入.gitignore文件里；</span><br><span class="line">git add .gitignore    //③.将<span class="string">".gitignore"</span>文件放入暂存区</span><br></pre></td></tr></table></figure><h2 id="四、Git连接远程仓库"><a href="#四、Git连接远程仓库" class="headerlink" title="四、Git连接远程仓库"></a>四、Git连接远程仓库</h2><p>(以GitHub做为远程仓库，若无GitHub账号则须先注册，登录)</p><h3 id="1、本地仓库与远程仓库的连接"><a href="#1、本地仓库与远程仓库的连接" class="headerlink" title="1、本地仓库与远程仓库的连接"></a>1、本地仓库与远程仓库的连接</h3><p>step1：在GitHub上创建一个仓库(假设仓库名为”Git-test”);<br>step2：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/***/Git-test.git    //<span class="string">"***"</span>处为自己的GitHub用户名</span><br></pre></td></tr></table></figure><h3 id="2、提交到远程仓库"><a href="#2、提交到远程仓库" class="headerlink" title="2、提交到远程仓库"></a>2、提交到远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Git-Version-Ccontrol-System&quot;&gt;&lt;a href=&quot;#Git-Version-Ccontrol-System&quot; class=&quot;headerlink&quot; title=&quot;Git(Version Ccontrol System)&quot;&gt;&lt;/a&gt;&lt;center&gt;Git(Version Ccontrol System)&lt;/center&gt;&lt;/h1&gt;
    
    </summary>
    
    
    
      <category term="Git" scheme="https://blog.eaglelee.cn/tags/Git/"/>
    
      <category term="Note" scheme="https://blog.eaglelee.cn/tags/Note/"/>
    
  </entry>
  
  <entry>
    <title>Sort Algorithm</title>
    <link href="https://blog.eaglelee.cn/2019/12/14/Sort%20Algorithm/"/>
    <id>https://blog.eaglelee.cn/2019/12/14/Sort%20Algorithm/</id>
    <published>2019-12-14T04:24:56.150Z</published>
    <updated>2020-06-10T00:00:59.461Z</updated>
    
    <content type="html"><![CDATA[<h1 id="排序算法-考研数据结构"><a href="#排序算法-考研数据结构" class="headerlink" title="排序算法-考研数据结构"></a><center>排序算法-考研数据结构<center></center></center></h1><blockquote><p> &emsp;&emsp;所谓排序，即将原本无序的序列重新排列成有序序列的过程。这个序列中的每一项可能是单独的数据元素，也可能是一条记录(记录是由多个数据元素组成的，如一个学生记录就是由学号、姓名、年龄、专业等数据元素组成的)。<a id="more"></a>如果是记录，则既可以按照记录的主关键字排序(主关键字唯一标识一条记录，如学生记录中的学号就是主关键字，学号不能重复，用来唯一标识一个学生)，也可以按照记录的次关键字排序(如学生记录中的姓名、专业等都是次关键字，次关键字是可以重复的)。<br>&emsp;&emsp;而稳定性是指当待排序序列中有两个或两个以上相同的关键字时，排序前和排序后这些关键字的相对位置，如果没有发生变化就是稳定的，否则就是不稳定的。例如，某序列有两个关键字都是50，以50(a)和50(b)来区分它们，用某种算法A对其排序，排序前50(a)在50(b)之前，如果排序后50(a)仍然在50(b)之前，则A是稳定的；如果能找出一种情况，使排序后50(a)在50(b)之后，则A是不稳定的。如果关键字不能重复，则排序结果是唯一的，那么选择的排序算法稳定与否就无关紧要；如果关键字可以重复，则在选择排序算法时，就要根据具体的需求采考虑选择稳定的还是不稳定的排序算法。</p></blockquote><h2 id="0、各排序算法的时间复杂度与空间复杂度及稳定性比较"><a href="#0、各排序算法的时间复杂度与空间复杂度及稳定性比较" class="headerlink" title="0、各排序算法的时间复杂度与空间复杂度及稳定性比较"></a>0、各排序算法的时间复杂度与空间复杂度及稳定性比较</h2><h2 id><a href="#" class="headerlink" title></a><img src="/2019/12/14/Sort%20Algorithm/Ochat.png" alt="排序算法的时间复杂度与空间复杂度及稳定性比较" title="时间和空间复杂度及稳定性总结"></h2><h2 id="一、插入类排序"><a href="#一、插入类排序" class="headerlink" title="一、插入类排序"></a>一、插入类排序</h2><h3 id="1、直接插入"><a href="#1、直接插入" class="headerlink" title="1、直接插入"></a>1、直接插入</h3><blockquote><p><strong><em>算法思想</em></strong>：每趟将一个待排序的关键字按照其值的大小插入到已经排好的部分有序序列的适当位置上，直到所有待排关键字都被插入到有序序列中为止。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertSort</span><span class="params">(<span class="keyword">int</span> R[], <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">temp = R[i];  <span class="comment">//将待插入关键字暂存在temp中</span></span><br><span class="line">j = i - <span class="number">1</span>;</span><br><span class="line"><span class="comment">/*下面这个循环完成了从待排关键字之前的关键字开始扫描，如果大于待排关键字，则后移一位*/</span></span><br><span class="line"><span class="keyword">while</span> (j &gt;= <span class="number">0</span> &amp;&amp; temp &lt; R[j]) &#123;</span><br><span class="line">R[j + <span class="number">1</span>] = R[j];</span><br><span class="line">j--;</span><br><span class="line">&#125;</span><br><span class="line">R[j + <span class="number">1</span>] = temp;   <span class="comment">//找到插入位置，将temp中暂存的待排关键字插入</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//对排序了的数组输出</span></span><br><span class="line">outPutArr(R, n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="2、希尔排序"><a href="#2、希尔排序" class="headerlink" title="2、希尔排序"></a>2、希尔排序</h3><blockquote><p><strong><em>算法思想</em></strong>：希尔排序又称之为缩小增量排序，其本质还是插入排序，只不过是将待排序列按照某种规则分成几个子序列，分别对这几个子序列进行直接插入排序。这个规则的体现就是增量的选取，希尔排序的时间复杂度为：O(n*logn)。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">shellSort</span><span class="params">(<span class="keyword">int</span> R[], <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> gap = n/<span class="number">2</span>; gap &gt; <span class="number">0</span>; gap /= <span class="number">2</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = gap; i &lt; n; i++)&#123;</span><br><span class="line">temp = R[i];</span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line"><span class="keyword">for</span>(j = i; j &gt;= gap &amp;&amp; R[j-gap] &gt; temp; j -= gap)&#123;</span><br><span class="line">R[j] = R[j-gap];</span><br><span class="line">&#125;</span><br><span class="line">R[j] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">outPutArr(R,n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="二、交换类排序"><a href="#二、交换类排序" class="headerlink" title="二、交换类排序"></a>二、交换类排序</h2><h3 id="3、冒泡排序"><a href="#3、冒泡排序" class="headerlink" title="3、冒泡排序"></a>3、冒泡排序</h3><blockquote><p><strong><em>算法思想</em></strong>：假设待排序表长为n，从后往前(或从前往后)两两比较相邻元素的值，若为逆序(即A[i-1]&gt;A[i])，则交换它们，直到序列比较完。我们称它为一.趟冒泡，结果将最小的元素交换到待排序列的第一一个位置(关键字最小的元素如气泡一般逐渐往上“漂浮”直至“水面”，这就是冒泡排序名字的由来)。下一趟冒泡时，前一趟确定的最小元素不再参与比较，待排序列减少-一个元素，每趟冒泡的结果把序列中的最小元素放到了序列的最终位置，…..  这样最多做n-1趟冒泡就能把所有元素排好序。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="keyword">int</span> R[], <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">bool</span> flag;</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"><span class="keyword">for</span>(i = n<span class="number">-1</span>; i &gt; <span class="number">0</span>; i--)&#123;</span><br><span class="line">flag = <span class="literal">false</span>;        <span class="comment">//flag用来标记此趟排序是否发生了交换</span></span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">1</span>; j &lt;= i; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(R[j<span class="number">-1</span>] &gt; R[j])&#123;</span><br><span class="line">temp = R[j];</span><br><span class="line">R[j] = R[j<span class="number">-1</span>];</span><br><span class="line">R[j<span class="number">-1</span>] = temp;</span><br><span class="line">flag = <span class="literal">true</span>;  <span class="comment">//如果没发生交换，则flag为0</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!flag)&#123;      <span class="comment">//一趟排序过程中没有发生排序，则证明剩余序列有序，不在冒泡</span></span><br><span class="line">outPutArr(R,n);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="4、快速排序"><a href="#4、快速排序" class="headerlink" title="4、快速排序"></a>4、快速排序</h3><blockquote><p><strong><em>算法思想</em></strong>：也是交换类的排序，它通过多次划分操作实现排序。以升序为例，其执行流程可以概括为：每一趟选择当前所有子序列中的一个关键字(通常是第一个)作为枢轴，将子序列中比枢轴小的移到枢轴的前边，比枢轴大的移动到枢轴的后边；当本趟所有的子序列都被枢轴以上述规则划分完毕后会的到新的一组更短的子序列，它们成为下一趟划分的初始序列集。快速排序的算法思想基于分治思想的，其平均时间复杂度为O(n*logn)，最坏时间复杂度为O(n^2)。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span> R[], <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"><span class="keyword">int</span> i = low, j = high;</span><br><span class="line"><span class="keyword">if</span>(low &lt; high)&#123;</span><br><span class="line">temp = R[low];</span><br><span class="line"><span class="keyword">while</span>(i &lt; j)&#123;   <span class="comment">//将数组中小于temp的放在左边，大于temp的放在右边</span></span><br><span class="line"><span class="keyword">while</span>(j &gt; i &amp;&amp; R[j] &gt;= temp)&#123;   <span class="comment">//从右往左扫描，找到一个小于temp的关键字</span></span><br><span class="line">j--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i &lt; j)&#123;</span><br><span class="line">R[i] = R[j];         <span class="comment">//放在temp左边</span></span><br><span class="line">i++;                 <span class="comment">//右移一位</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(i &lt; j &amp;&amp; R[i] &lt; temp)&#123;    <span class="comment">//从左往右扫描，找到一个大于temp的关键字</span></span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i &lt; j)&#123;</span><br><span class="line">R[j] = R[i];        <span class="comment">//放在temp右边</span></span><br><span class="line">j--;                <span class="comment">//左移一位</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">R[i] = temp;                <span class="comment">//将temp放在最终位置</span></span><br><span class="line">quickSort(R,low,i<span class="number">-1</span>);       <span class="comment">//递归的对temp左边的关键字排序</span></span><br><span class="line">quickSort(R,i+<span class="number">1</span>,high);      <span class="comment">//递归的对temp右边的关键字排序</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="三、选择类排序"><a href="#三、选择类排序" class="headerlink" title="三、选择类排序"></a>三、选择类排序</h2><h3 id="5、简单选择排序"><a href="#5、简单选择排序" class="headerlink" title="5、简单选择排序"></a>5、简单选择排序</h3><blockquote><p><strong><em>算法思想</em></strong>：选择类排序的主要动作是“选择”。简单选择采用最简单的选择方式，从头至尾扫描序列，选出最小的一个关键字，和第一个关键字交换，接着从剩下的关键字中继续这种选择和交换，最终使序列有序。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectSort</span><span class="params">(<span class="keyword">int</span> R[], <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j, k;</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">k = i;</span><br><span class="line"><span class="comment">/*下面这个循环是算法的关键，它从无序序列中挑出一个最小的关键字*/</span></span><br><span class="line"><span class="keyword">for</span>(j = i + <span class="number">1</span>; j &lt; n; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(R[k] &gt; R[j])&#123;</span><br><span class="line">k = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*下面这三句完成最小关键字与无序序列第一个关键字的交换*/</span></span><br><span class="line">temp = R[i];</span><br><span class="line">R[i] = R[k];</span><br><span class="line">R[k] = temp;</span><br><span class="line">&#125;</span><br><span class="line">outPutArr(R,n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="6、堆排序"><a href="#6、堆排序" class="headerlink" title="6、堆排序"></a>6、堆排序</h3><blockquote><p><strong><em>算法思想</em></strong>：堆是一种完全二叉树,这颗二叉树满足：任何一个非叶结点的值都不大于(或小于)其左右孩子结点的值。若父亲大孩子小，这样的堆称之为大顶堆；若父亲小孩子大称为小根堆。根据堆的定义可以知道，代表堆的这颗完全二叉树的根结点是最大的(或者最小的)，因此将一个无序的序列调整为一个堆，就可以找到这个序列的最大值(或者最小)的值，然后将找出的值交换到这个序列的最后(或最前)，这样有序序列关键字增加1个，无序序列中的关键字减少1个，对新的无序序列重复这样的操作，就实现了排序。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">堆排序算法主方法</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">heapSort</span><span class="params">(<span class="keyword">int</span> R[], <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"><span class="keyword">for</span>(i = n/<span class="number">2</span> - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)&#123;      <span class="comment">//建立初始堆</span></span><br><span class="line">sift(R, i, n<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i = n<span class="number">-1</span>; i &gt; <span class="number">0</span>; i--)&#123;        <span class="comment">//进行n-1次循环，完成堆排序</span></span><br><span class="line">temp = R[<span class="number">0</span>];             <span class="comment">//一下3句换出根节点的关键字，将其放入最终位置</span></span><br><span class="line">R[<span class="number">0</span>] = R[i];</span><br><span class="line">R[i] = temp;</span><br><span class="line">sift(R, <span class="number">0</span>, i<span class="number">-1</span>);           <span class="comment">//在减少了一个关键字的无序序列中调整</span></span><br><span class="line">&#125;</span><br><span class="line">outPutArr(R, n);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">堆的局部调整方法</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sift</span><span class="params">(<span class="keyword">int</span> R[] ,<span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>&#123;      <span class="comment">//关键字设定下表从0开始</span></span><br><span class="line"><span class="keyword">int</span> i = low,j = <span class="number">2</span>*i + <span class="number">1</span>;                 <span class="comment">//R[j]是R[i]的左孩子节点</span></span><br><span class="line"><span class="keyword">int</span> temp = R[i];</span><br><span class="line"><span class="keyword">while</span>(j &lt;= high)&#123;</span><br><span class="line"><span class="keyword">if</span>(j &lt; high &amp;&amp; R[j] &lt; R[j+<span class="number">1</span>])&#123;         <span class="comment">//若右孩子较大，则j指向右孩子</span></span><br><span class="line">j++;                           <span class="comment">//j变为2*i+2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(temp &lt; R[j])&#123;</span><br><span class="line">R[i] = R[j];                  <span class="comment">//将R[j]调整到双亲节点的位置</span></span><br><span class="line">i = j;                        <span class="comment">//修改i和j的值，继续向下调整</span></span><br><span class="line">j = <span class="number">2</span>*i + <span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">break</span>;                       <span class="comment">//调整结束</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">R[i] = temp;                         <span class="comment">//被调整节点放入最终位置</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="7、归并排序"><a href="#7、归并排序" class="headerlink" title="7、归并排序"></a>7、归并排序</h2><blockquote><p><strong><em>算法思想</em></strong>：二路归并排序是采用的分而治之的思想。将一个待排序的序列分成两个序列，分别对这两个序列排序。而对于这两个序列排序的方式也是和之前一样，将这两个序列分别分成两个序列分别排序。一直这样分割下去，知道序列中没有元素或者只有一个元素为止。因为没有元素的序列和只有一个元素的序列定是一个有序的序列，所以相当于将这个序列排序完毕，向上返回。返回的过程中做的最重要的一件事就是将两个有序的序列合并成一个有序的序列。所以归并排序最重要的两步是分割和合并。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**归并排序主方法*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(<span class="keyword">int</span> R[], <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(low &lt; high)&#123;</span><br><span class="line"><span class="keyword">int</span> mid = (low + high) / <span class="number">2</span>;</span><br><span class="line">mergeSort(R, low, mid);       <span class="comment">//归并排序前半段</span></span><br><span class="line">mergeSort(R, mid + <span class="number">1</span>, high);    <span class="comment">//归并排序后半段</span></span><br><span class="line">merge(R, low, mid, high);    <span class="comment">//将R数组中low~mid,mid~high两段序列归并为一个序列</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**将两个序列归并为一个有序序列*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> R[], <span class="keyword">int</span> low, <span class="keyword">int</span> mid, <span class="keyword">int</span> high)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j, k;</span><br><span class="line"><span class="keyword">int</span> n1 = mid - low + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> n2 = high - mid;</span><br><span class="line"><span class="keyword">int</span> left[n1], right[n2];    <span class="comment">//此处在C++和C里会有编译错误，解决办法是将测试用例的逻辑结构改为一般线性表或者用Java语言实现该算法</span></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n1; i++)&#123;</span><br><span class="line">left[i] = R[low + i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; n2; j++)&#123;</span><br><span class="line">right[j] = R[mid + <span class="number">1</span> + j];</span><br><span class="line">&#125;</span><br><span class="line">i = <span class="number">0</span>; j = <span class="number">0</span>; k = low;</span><br><span class="line"><span class="keyword">while</span>(i &lt; n1 &amp;&amp; j &lt; n2)&#123;</span><br><span class="line"><span class="keyword">if</span>(left[i] &lt;= right[j])&#123;</span><br><span class="line">R[k] = left[i++];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">R[k] = right[j++];</span><br><span class="line">&#125;</span><br><span class="line">k++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(i&lt;n1)&#123;</span><br><span class="line">R[k++] = left[i++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(j&lt;n2)&#123;</span><br><span class="line">R[k++] = right[j++];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;排序算法-考研数据结构&quot;&gt;&lt;a href=&quot;#排序算法-考研数据结构&quot; class=&quot;headerlink&quot; title=&quot;排序算法-考研数据结构&quot;&gt;&lt;/a&gt;&lt;center&gt;排序算法-考研数据结构&lt;center&gt;&lt;/center&gt;&lt;/center&gt;&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt; &amp;emsp;&amp;emsp;所谓排序，即将原本无序的序列重新排列成有序序列的过程。这个序列中的每一项可能是单独的数据元素，也可能是一条记录(记录是由多个数据元素组成的，如一个学生记录就是由学号、姓名、年龄、专业等数据元素组成的)。&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="Sort" scheme="https://blog.eaglelee.cn/tags/Sort/"/>
    
      <category term="Algorithm" scheme="https://blog.eaglelee.cn/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>The README of BlueLake</title>
    <link href="https://blog.eaglelee.cn/2019/11/29/README-Hexo/"/>
    <id>https://blog.eaglelee.cn/2019/11/29/README-Hexo/</id>
    <published>2019-11-29T11:34:00.709Z</published>
    <updated>2019-11-29T13:49:40.718Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BlueLake"><a href="#BlueLake" class="headerlink" title="BlueLake"></a>BlueLake</h1><p><a href="README.en.md">English</a> | <a href="README.md">简体中文</a></p><p>一个简洁轻量化的响应式<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>博客主题。</p><ul><li>点击预览<a href="https://chaooo.github.io/" target="_blank" rel="noopener">【深色主题】</a>、<a href="https://chaoo.oschina.io/" target="_blank" rel="noopener">【浅色主题】</a></li></ul><p><a href="https://chaooo.github.io/" target="_blank" rel="noopener"><img src="http://cdn.chaooo.top/hexo/BlueLake.jpg" alt="BlueLake template preview" title="BlueLake template preview"></a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装主题和渲染"><a href="#安装主题和渲染" class="headerlink" title="安装主题和渲染:"></a>安装主题和渲染:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/chaooo/hexo-theme-BlueLake.git themes/BlueLake</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-renderer-jade@0.3.0 --save</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-renderer-stylus --save</span></span><br></pre></td></tr></table></figure><h3 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h3><p>在Hexo配置文件（<code>hexo/_config.yml</code>）中把主题设置修改为<code>BlueLake</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: BlueLake</span><br></pre></td></tr></table></figure><p>如果你想生成压缩后的css，在（<code>hexo/_config.yml</code>）中添加：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">stylus:</span></span><br><span class="line">  <span class="attr">compress:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/BlueLake</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>打开<code>themes/BlueLake/_config.yml</code>进行配置。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##########################</span></span><br><span class="line"><span class="comment">## Site Config Settings ##</span></span><br><span class="line"><span class="comment">##########################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Theme version</span></span><br><span class="line"><span class="attr">version:</span> <span class="number">2.0</span><span class="number">.2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Theme tone</span></span><br><span class="line"><span class="attr">dark:</span> <span class="literal">false</span> <span class="comment">#true/false  #切换为true,即可体验深色主题</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Header</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">page:</span> <span class="string">home</span></span><br><span class="line">    <span class="attr">directory:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">page:</span> <span class="string">archive</span></span><br><span class="line">    <span class="attr">directory:</span> <span class="string">archives/</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">page:</span> <span class="string">about</span></span><br><span class="line">    <span class="attr">directory:</span> <span class="string">about/</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">page:</span> <span class="string">rss</span></span><br><span class="line">    <span class="attr">directory:</span> <span class="string">atom.xml</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fa-rss</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sidebar</span></span><br><span class="line"><span class="attr">widgets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">recent_posts</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">category</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">tag</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">archive</span></span><br><span class="line">  <span class="comment">#- weibo</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">links</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Toc</span></span><br><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Static files</span></span><br><span class="line"><span class="attr">js:</span> <span class="string">js</span></span><br><span class="line"><span class="attr">css:</span> <span class="string">css</span></span><br><span class="line"><span class="attr">share_path:</span> <span class="string">share</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="attr">Plugins:</span></span><br><span class="line">  <span class="string">hexo-generator-feed</span></span><br><span class="line">  <span class="string">hexo-generator-sitemap</span></span><br><span class="line">  <span class="string">hexo-generator-baidu-sitemap</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#sitemap</span></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br><span class="line"><span class="attr">baidusitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidusitemap.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Local search</span></span><br><span class="line"><span class="attr">local_search:</span> <span class="literal">true</span> <span class="comment">## Use a javascript-based local search engine, true/false.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Copyright</span></span><br><span class="line"><span class="attr">copyright:</span> </span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#display article copyright information, true/false.</span></span><br><span class="line">  <span class="attr">describe:</span> <span class="comment">#copyright description</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># MathJax Support</span></span><br><span class="line"><span class="attr">mathjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span>  <span class="comment">#true/false.</span></span><br><span class="line">  <span class="attr">cdn:</span> <span class="string">//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Cmments</span></span><br><span class="line"><span class="attr">comment:</span></span><br><span class="line">  <span class="attr">duoshuo:</span> <span class="comment">#chaooo ## duoshuo_shortname</span></span><br><span class="line">  <span class="attr">disqus:</span> <span class="comment">## disqus_shortname</span></span><br><span class="line">  <span class="attr">livere:</span> <span class="comment">## 来必力(data-uid)</span></span><br><span class="line">  <span class="attr">uyan:</span> <span class="comment">## 友言(uid)</span></span><br><span class="line">  <span class="attr">cloudTie:</span> <span class="comment">## 网易云跟帖(productKey)</span></span><br><span class="line">  <span class="attr">changyan:</span> <span class="comment">## 畅言需在下方配置两个参数，此处不填。</span></span><br><span class="line">    <span class="attr">appid:</span> <span class="comment">## 畅言(appid)</span></span><br><span class="line">    <span class="attr">appkey:</span> <span class="comment">##畅言(appkey)</span></span><br><span class="line">  <span class="attr">gitalk:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment">## If you want to use Gitment comment system please set the value to true.</span></span><br><span class="line">    <span class="attr">owner:</span> <span class="comment">## Your GitHub ID, e.g. username</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="comment">## The repository to store your comments, make sure you're the repo's owner, e.g. gitalk.github.io</span></span><br><span class="line">    <span class="attr">client_id:</span> <span class="comment">## GitHub client ID, e.g. 75752dafe7907a897619</span></span><br><span class="line">    <span class="attr">client_secret:</span> <span class="comment">## GitHub client secret, e.g. ec2fb9054972c891289640354993b662f4cccc50</span></span><br><span class="line">    <span class="attr">admin:</span> <span class="comment">## Github repo owner and collaborators, only these guys can initialize github issues.</span></span><br><span class="line">    <span class="attr">language:</span> <span class="string">zh-CN</span> <span class="comment">## Language</span></span><br><span class="line">    <span class="attr">pagerDirection:</span> <span class="string">last</span> <span class="comment"># Comment sorting direction, available values are last and first.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Share</span></span><br><span class="line"><span class="attr">share:</span></span><br><span class="line">  <span class="attr">local_share:</span> <span class="literal">true</span> <span class="comment">##本地分享</span></span><br><span class="line">  <span class="attr">baidu_share:</span> <span class="comment">#true ## 百度分享</span></span><br><span class="line">  <span class="attr">JiaThis_share:</span> <span class="comment">##true ##JiaThis分享</span></span><br><span class="line">  <span class="attr">duoshuo_share:</span> <span class="comment">#true ##true 多说分享必须和多说评论一起使用。</span></span><br><span class="line">  <span class="attr">addToAny_share:</span> <span class="comment"># AddToAny share. Empty list hides. List items are service name at url. For ex: email for '&lt;a href="https://www.addtoany.com/add_to/email?linkurl=...'</span></span><br><span class="line">  <span class="comment">#  - twitter</span></span><br><span class="line">  <span class="comment">#  - baidu</span></span><br><span class="line">  <span class="comment">#  - facebook</span></span><br><span class="line">  <span class="comment">#  - google_plus</span></span><br><span class="line">  <span class="comment">#  - linkedin</span></span><br><span class="line">  <span class="comment">#  - email</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Analytics</span></span><br><span class="line"><span class="attr">google_analytics:</span> <span class="comment">## Your Google Analytics tracking id, e.g. UA-42025684-2</span></span><br><span class="line"><span class="attr">baidu_analytics:</span> <span class="comment">## Your Baidu Analytics tracking id, e.g. 1006843030519956000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Miscellaneous</span></span><br><span class="line"><span class="attr">show_category_count:</span> <span class="literal">true</span> <span class="comment">## If you want to show the count of categories in the sidebar widget please set the value to true.</span></span><br><span class="line"><span class="attr">widgets_on_small_screens:</span> <span class="literal">true</span> <span class="comment">## Set to true to enable widgets on small screens.</span></span><br><span class="line"><span class="attr">busuanzi:</span> <span class="literal">true</span> <span class="comment">## If you want to use Busuanzi page views please set the value to true.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># About page</span></span><br><span class="line"><span class="attr">about:</span></span><br><span class="line">  <span class="attr">photo_url:</span> <span class="comment">## Your photo e.g. http://cdn.chaooo.top/hexo/Avatar.jpg</span></span><br><span class="line">  <span class="attr">items:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">label:</span> <span class="string">email</span></span><br><span class="line">    <span class="attr">url:</span> <span class="comment">## Your email with mailto: e.g.  mailto:zhenggchaoo@gmail.com</span></span><br><span class="line">    <span class="attr">title:</span> <span class="comment">## Your email e.g.  zhenggchaoo@gmail.com</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">label:</span> <span class="string">github</span></span><br><span class="line">    <span class="attr">url:</span> <span class="comment">## Your github'url e.g.  https://github.com/chaooo</span></span><br><span class="line">    <span class="attr">title:</span> <span class="comment">## Your github'name e.g.  chaooo</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">label:</span> <span class="string">weibo</span></span><br><span class="line">    <span class="attr">url:</span> <span class="comment">## Your weibo's url e.g.  http://weibo.com/zhengchaooo</span></span><br><span class="line">    <span class="attr">title:</span> <span class="comment">## Your weibo's name e.g.  秋过冬漫长</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">label:</span> <span class="string">twitter</span></span><br><span class="line">    <span class="attr">url:</span></span><br><span class="line">    <span class="attr">title:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">label:</span> <span class="string">facebook</span></span><br><span class="line">    <span class="attr">url:</span></span><br><span class="line">    <span class="attr">title:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Friend link</span></span><br><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">site-name1</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">http://www.example1.com/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">site-name2</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">http://www.example2.com/</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">site-name3</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">http://www.example3.com/</span></span><br></pre></td></tr></table></figure><ul><li><strong>version</strong> - 用于自动刷新CDN上的静态文件。</li><li><strong>menu</strong> - 导航菜单。</li><li><strong>widgets</strong> - 侧边栏中的窗口小部件。</li><li><strong>Toc</strong> - 文章目录</li><li><strong>Static files</strong> - 静态文件目录，以方便CDN使用。</li><li><strong>Local search</strong></li><li>self_search - 默认本地JS搜索.</li><li><strong>Cmments</strong></li><li>duoshuo - 若使用<a href="http://duoshuo.com" target="_blank" rel="noopener">多说评论</a>，注册多说后在这填写short_name(用于评论与分享)。</li><li>disqus - 若使用<a href="https://disqus.com" target="_blank" rel="noopener">Disqus评论</a>，注册Disqus后在这填写short_name。</li><li>livere- 若使用<a href="https://livere.com" target="_blank" rel="noopener">来必力评论</a>，注册来必力,获得data-uid。</li><li>uyan - 若使用<a href="http://www.uyan.cc/" target="_blank" rel="noopener">友言评论</a>，注册友言,获得uid。</li><li>cloudTie - 若使用<a href="https://gentie.163.com/info.html" target="_blank" rel="noopener">网易云跟帖评论</a>，注册网易云跟帖,获得productKey。</li><li>changyan - 若使用<a href="http://changyan.kuaizhan.com" target="_blank" rel="noopener">畅言评论</a>，注册畅言，获得appid，appkey。</li><li><strong>About page</strong> - 关于我页面(hexo new page ‘about’)。</li><li><strong>links</strong> - 友情链接。</li><li><strong>Miscellaneous</strong></li><li>show_category_count - 是否在侧边栏分类中显示类别的数量（true/false）.</li><li>widgets_on_small_screens - 小屏幕下侧边栏在底部显示.</li><li>busuanzi - 用<a href="http://busuanzi.ibruce.info" target="_blank" rel="noopener">Busuanzi</a>来统计网站访问量.</li><li>google_analytics - <a href="https://www.google.com/analytics/" target="_blank" rel="noopener">Google Analytics</a> tracking ID。</li><li>baIDu_analytics - <a href="http://tongji.baidu.com" target="_blank" rel="noopener">Baidu Analytics</a> tracking ID。</li></ul><h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><h4 id="站点图标"><a href="#站点图标" class="headerlink" title="站点图标"></a>站点图标</h4><p>您可以准备一张ico格式并命名为** favicon.ico **，请将其放入hexo目录的<code>source</code>文件夹，建议大小：32px * 32px。</p><p>您可以为苹果设备添加网站徽标，请将名为** apple-touch-icon.png **的图像放入hexo目录的“source”文件夹中，建议大小为：114px * 114px。</p><h4 id="添加站点关键字"><a href="#添加站点关键字" class="headerlink" title="添加站点关键字"></a>添加站点关键字</h4><p>请在hexo目录的“hexo/_config.yml”中添加<code>keywords</code>字段，如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hexo</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">副标题</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">网站简要描述,如：Charles·Zheng's</span> <span class="string">blog.</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">网站关键字,</span> <span class="string">key,</span> <span class="string">key1,</span> <span class="string">key2,</span> <span class="string">key3</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Charles</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br></pre></td></tr></table></figure><h4 id="设置阅读全文"><a href="#设置阅读全文" class="headerlink" title="设置阅读全文"></a>设置阅读全文</h4><p>您可以在文章的 front-matter 中添加 description，并提供文章摘录，或在文章中使用‘‘<code>&lt;!--more--&gt;</code>’’手动进行截断（Hexo推荐的方式）。</p><h4 id="自定义page页面"><a href="#自定义page页面" class="headerlink" title="自定义page页面"></a>自定义page页面</h4><p>在<code>source</code>文件夹中创建文件夹<code>index.md</code>来添加页面，并在<code>index.md</code>的<code>front-matter&#39;中添加</code>layout：page<code>。Create folders inlcuding</code>index.md<code>in</code>source<code>folder to add pages, and add a</code>layout: page<code>in</code>front-matter<code>of</code>index.md`.</p><h4 id="About页面"><a href="#About页面" class="headerlink" title="About页面"></a>About页面</h4><p>此主题默认page页面是关于我页面的布局，生成一个关于我页面：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo new page <span class="string">'about'</span></span></span><br></pre></td></tr></table></figure><p>配置照片地址、邮箱、微博链接、微博名、GitHub链接、Github名：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># About page</span></span><br><span class="line"><span class="attr">about:</span></span><br><span class="line">  <span class="attr">photo_url:</span> <span class="comment">## Your photo e.g. http://cdn.chaooo.top/hexo/Avatar.jpg</span></span><br><span class="line">  <span class="attr">items:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">label:</span> <span class="string">email</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fa-email</span></span><br><span class="line">    <span class="attr">url:</span> <span class="comment">## Your email with mailto: e.g.  mailto:zhenggchaoo@gmail.com</span></span><br><span class="line">    <span class="attr">title:</span> <span class="comment">## Your email e.g.  zhenggchaoo@gmail.com</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">label:</span> <span class="string">github</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fa-github</span></span><br><span class="line">    <span class="attr">url:</span> <span class="comment">## Your github'url e.g.  https://github.com/chaooo</span></span><br><span class="line">    <span class="attr">title:</span> <span class="comment">## Your github'name e.g.  chaooo</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">label:</span> <span class="string">weibo</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fa-weibo</span></span><br><span class="line">    <span class="attr">url:</span> <span class="comment">## Your weibo's url e.g.  http://weibo.com/zhengchaooo</span></span><br><span class="line">    <span class="attr">title:</span> <span class="comment">## Your weibo's name e.g.  秋过冬漫长</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">label:</span> <span class="string">twitter</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fa-twitter</span></span><br><span class="line">    <span class="attr">url:</span></span><br><span class="line">    <span class="attr">title:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">label:</span> <span class="string">facebook</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fa-facebook</span></span><br><span class="line">    <span class="attr">url:</span></span><br><span class="line">    <span class="attr">title:</span></span><br></pre></td></tr></table></figure><p><a href="http://chaoo.oschina.io/about/" target="_blank" rel="noopener">点击预览About页面</a></p><h4 id="代码语法高亮"><a href="#代码语法高亮" class="headerlink" title="代码语法高亮"></a>代码语法高亮</h4><p>请在hexo目录的“hexo/_config.yml”中设置“highlight”选项，如下所示：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span></span><br></pre></td></tr></table></figure><h4 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h4><p>如果要使用本地站点搜索，您必须安装插件<a href="https://github.com/alexbruno/hexo-generator-json-content" target="_blank" rel="noopener">hexo-generator-json-content</a>来创建JSON搜索文件 ，然后将配置添加到<code>hexo/_config.yml</code>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-generator-json-content@2.2.0 --save</span></span><br></pre></td></tr></table></figure><p>然后在<code>hexo/_config.yml</code>添加配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jsonContent:</span></span><br><span class="line">  <span class="attr">meta:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">pages:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">posts:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">date:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">path:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">text:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">raw:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">content:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">slug:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">updated:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">comments:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">link:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">permalink:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">excerpt:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">categories:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h4><p>该主题目前有七种语言：简体中文（zh-CN），繁体中文（zh-TW），英语（en），法语（fr-FR），德语（de-DE），韩语 （ko）,西班牙语（es-ES）,欢迎修改主题并翻译成其他语言。</p><h4 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h4><p>目前主题集成六种第三方评论，分别是<a href="http://duoshuo.com" target="_blank" rel="noopener">多说评论</a>、<a href="https://disqus.com" target="_blank" rel="noopener">Disqus评论</a>、<a href="https://livere.com" target="_blank" rel="noopener">来必力评论</a>、<a href="http://www.uyan.cc/" target="_blank" rel="noopener">友言评论</a>、<a href="https://gentie.163.com/info.html" target="_blank" rel="noopener">网易云跟帖评论</a>、<a href="http://changyan.kuaizhan.com" target="_blank" rel="noopener">畅言评论</a>、基于Github Issue的<a href="https://gitalk.github.io/" target="_blank" rel="noopener">GITALK</a>，推荐<a href="https://gitalk.github.io/" target="_blank" rel="noopener">gitalk</a>。</p><ol><li><p>需要 GitHub Application，如果没有<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">点击这里申请</a>。</p><ul><li>Application name： 应用名称，随意</li><li>Homepage URL： 网站URL，对应自己博客地址</li><li>Application description ：描述，随意</li><li>Authorization callback URL：# 网站URL，博客地址就好</li><li>点击注册，页面会出现其中<strong>Client ID</strong>和<strong>Client Secret</strong>在后面的配置中需要用到</li></ul></li><li><p>配置<code>主题_config.yml</code>：</p><figure class="highlight yml"><figcaption><span>主题_config.yml</span><a href="https://github.com/chaooo/hexo-theme-BlueLake/blob/master/_config.yml" target="_blank" rel="noopener">themes/BlueLake/_config.yml</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Cmments</span></span><br><span class="line"><span class="attr">comment:</span></span><br><span class="line">  <span class="attr">gitalk:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">## 开启gitalk</span></span><br><span class="line">    <span class="attr">owner:</span> <span class="comment">## GitHub的用户名</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="comment">## 此评论存放的GitHub仓库</span></span><br><span class="line">    <span class="attr">client_id:</span> <span class="comment">## 复制刚才生成的clientID，例如. 75752dafe7907a897619</span></span><br><span class="line">    <span class="attr">client_secret:</span> <span class="comment">## 复制刚才生成的clientSecret，例如. ec2fb9054972c891289640354993b662f4cccc50</span></span><br><span class="line">    <span class="attr">admin:</span> <span class="comment">## Github的用户名</span></span><br><span class="line">    <span class="attr">language:</span> <span class="string">zh-CN</span> <span class="comment">## Language</span></span><br><span class="line">    <span class="attr">pagerDirection:</span> <span class="string">last</span> <span class="comment"># Comment sorting direction, available values are last and first.</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="Solutions"><a href="#Solutions" class="headerlink" title="Solutions"></a>Solutions</h2><ul><li>检查您当前的hexo的根目录，是否包含<code>source /</code>，<code>themes /</code>等。</li><li>如果你在使用这个主题有任何问题，请随时打开一个<a href="https://github.com/chaooo/hexo-theme-BlueLake/issues" target="_blank" rel="noopener">issue</a>，或者给我发邮件<a href="zhenggchaoo@gmail.com">zhenggchaoo@gmail.com</a>。</li></ul><h2 id="浏览器支持"><a href="#浏览器支持" class="headerlink" title="浏览器支持"></a>浏览器支持</h2><p><img src="http://i.imgur.com/iO9L5ty.png" alt="Imgur"></p><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p><a href="LICENSE">MIT License</a></p><h2 id="贡献"><a href="#贡献" class="headerlink" title="贡献"></a>贡献</h2><p>欢迎各种形式的贡献（增强功能，添加新功能，撰写文档，改进代码，提交问题和检查BUG…）。</p><p>期待您的pull request。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;BlueLake&quot;&gt;&lt;a href=&quot;#BlueLake&quot; class=&quot;headerlink&quot; title=&quot;BlueLake&quot;&gt;&lt;/a&gt;BlueLake&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;README.en.md&quot;&gt;English&lt;/a&gt; | &lt;a href=&quot;
      
    
    </summary>
    
    
    
      <category term="README" scheme="https://blog.eaglelee.cn/tags/README/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://blog.eaglelee.cn/2019/11/20/hello-world/"/>
    <id>https://blog.eaglelee.cn/2019/11/20/hello-world/</id>
    <published>2019-11-20T13:53:24.859Z</published>
    <updated>2019-11-29T13:46:21.568Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
      <category term="HelloWorld" scheme="https://blog.eaglelee.cn/tags/HelloWorld/"/>
    
  </entry>
  
</feed>
